version: '3.9'

services:
  microskel:
    build:
      context: microskel
      dockerfile: Dockerfile\
    image: microskel
  consul-server:  # centralizeaza catalogul de servicii + leader election
    image: progrium/consul
    expose:
      - 8300
      - 8301
      - 8301/udp
      - 8302
      - 8302/udp
      - 8400
    ports:
      - "8500:8500"  # PAT
    networks:
      siemens:
        ipv4_address: 10.10.10.2
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 150M
    command: "-server -bootstrap -ui-dir /ui -advertise 10.10.10.2"

  consul-agent:  # cu el discuta aplicatia mea + verifica health
    image: progrium/consul
    expose:
      - 8300
      - 8301
      - 8301/udp
      - 8302
      - 8302/udp
      - 8400
      - 8500
    depends_on:
      - consul-server
    networks:
      siemens:
        ipv4_address: 10.10.10.3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    command: "-advertise 10.10.10.3 -join 10.10.10.2"

  elasticsearch:  # indexeaza logurile (primite de la logstash) in vederea cautarii
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    expose:
      - 9200
      - 9300
    environment:
      - discovery.type=single-node
    networks:
      siemens:
        ipv4_address: 10.10.10.4
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  kibana:  # master pt cautari loguri + indexari
    image: docker.elastic.co/kibana/kibana:7.15.2
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      siemens:
        ipv4_address: 10.10.10.5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 700M

  logstash-agent:  # broker intre aplicatie si elasticsearch
    image: docker.elastic.co/logstash/logstash:7.15.2
    expose:
      - 51515
    depends_on:
      - kibana
    networks:
      siemens:
        ipv4_address: 10.10.10.6
    command: "-e \"input { tcp { port => 51515 codec => json } }  output { elasticsearch { hosts => 'http://10.10.10.4:9200' } } \""
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 600M

  events-db:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=abc123
      - MYSQL_USER=roby
      - MYSQL_PASSWORD=abc123
      - MYSQL_DATABASE=events
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -p$$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"]
      interval: 20s
      retries: 5
      timeout: 5s
      start_period: 30s
    expose:
      - 3306
    networks:
      siemens:
        ipv4_address: 10.10.10.7
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    volumes:
      - events-db:/var/lib/mysql

  events:
    build: service_events
    depends_on:
      microskel:
        condition: service_started
      consul-agent:
        condition: service_started
      logstash-agent:
        condition: service_started
      events-db:
        condition: service_healthy
    environment:
      - MICROSERVICE_NAME=events
      - MICROSERVICE_HOST=events
      - MICROSERVICE_PORT=5000
      - MICROSERVICE_DEBUG=True
      - CONSUL_CHECK_INTERVAL=20s
      - CONSUL_CHECK_TIMEOUT=10s
      - CONSUL_HOST=consul-agent
      - CONSUL_PORT=8500
      - LOGSTASH_AGENT_HOST=logstash-agent
      - LOGSTASH_AGENT_PORT=51515
      - LOGSTASH_ENABLED=True
      - USE_DB=True
      - MICROSERVICE_DB_URI=mysql://roby:abc123@events-db:3306/events
    networks:
       siemens:
         ipv4_address: 10.10.10.8
    expose:
      - 5000
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 100M

  weather-db:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=abc123
      - MYSQL_USER=roby
      - MYSQL_PASSWORD=abc123
      - MYSQL_DATABASE=weather
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -p$$MYSQL_ROOT_PASSWORD -e 'SELECT 1'"]
      interval: 20s
      retries: 5
      timeout: 5s
      start_period: 30s
    expose:
      - 3306
    networks:
      siemens:
        ipv4_address: 10.10.10.9
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    volumes:
      - weather-db:/var/lib/mysql

  weather:
    build: service_weather
    depends_on:
      microskel:
        condition: service_started
      consul-agent:
        condition: service_started
      logstash-agent:
        condition: service_started
      weather-db:
        condition: service_healthy
    environment:
      - MICROSERVICE_NAME=weather
      - MICROSERVICE_HOST=weather
      - MICROSERVICE_PORT=5000
      - MICROSERVICE_DEBUG=True
      - CONSUL_CHECK_INTERVAL=20s
      - CONSUL_CHECK_TIMEOUT=10s
      - CONSUL_HOST=consul-agent
      - CONSUL_PORT=8500
      - LOGSTASH_AGENT_HOST=logstash-agent
      - LOGSTASH_AGENT_PORT=51515
      - LOGSTASH_ENABLED=True 
      - USE_DB=True
      - MICROSERVICE_DB_URI=mysql://roby:abc123@weather-db:3306/weather
    networks:
       siemens:
         ipv4_address: 10.10.10.10
    expose:
      - 5000
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 100M

  gateway:
    build: service_gateway
    depends_on:
      microskel:
        condition: service_started
      consul-agent:
        condition: service_started
      logstash-agent:
        condition: service_started
    environment:
      - MICROSERVICE_NAME=gateway
      - MICROSERVICE_HOST=gateway
      - MICROSERVICE_PORT=5000
      - MICROSERVICE_DEBUG=True
      - CONSUL_CHECK_INTERVAL=20s
      - CONSUL_CHECK_TIMEOUT=10s
      - CONSUL_HOST=consul-agent
      - CONSUL_PORT=8500
      - LOGSTASH_AGENT_HOST=logstash-agent
      - LOGSTASH_AGENT_PORT=51515
      - LOGSTASH_ENABLED=True
      - USE_DB=False
      - RETRY_STRATEGY=EXPONENTIAL_BACKOFF
    networks:
      siemens:
        ipv4_address: 10.10.10.11
    ports:
      - "8080:5000"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 100M
    

volumes:
  events-db:
  weather-db:
  elasticsearch:

  

networks:
  siemens:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.10.0/24
          gateway: 10.10.10.1
